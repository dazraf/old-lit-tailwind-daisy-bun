import { Person } from "./Person";

// Male first names data
const maleFirstNames = [
  "Aaron",
  "Abdul",
  "Abdullah",
  "Abraham",
  "Adam",
  "Adrian",
  "Ahmed",
  "Akira",
  "Alexander",
  "Ali",
  "Andreas",
  "Antonio",
  "Arjun",
  "Arthur",
  "Benjamin",
  "Boris",
  "Brian",
  "Bruno",
  "Carlos",
  "Chen",
  "Christian",
  "Christopher",
  "Daniel",
  "David",
  "Diego",
  "Dmitri",
  "Edward",
  "Emil",
  "Erik",
  "Ethan",
  "Felix",
  "Fernando",
  "Francesco",
  "Gabriel",
  "George",
  "Giorgio",
  "Gustav",
  "Hans",
  "Harold",
  "Harry",
  "Hassan",
  "Henrik",
  "Henry",
  "Hiroshi",
  "Hugo",
  "Ibrahim",
  "Ian",
  "Ivan",
  "Jack",
  "James",
  "Jan",
  "Jean",
  "João",
  "John",
  "Jonas",
  "Juan",
  "Julian",
  "Jun",
  "Kai",
  "Karl",
  "Kenji",
  "Kevin",
  "Klaus",
  "Koji",
  "Lars",
  "Leo",
  "Liam",
  "Liu",
  "Louis",
  "Lucas",
  "Luis",
  "Magnus",
  "Malik",
  "Marco",
  "Mario",
  "Mark",
  "Martin",
  "Matthias",
  "Michael",
  "Miguel",
  "Ming",
  "Mohammed",
  "Nicholas",
  "Nicolas",
  "Noah",
  "Oliver",
  "Oscar",
  "Otto",
  "Owen",
  "Pavel",
  "Pedro",
  "Peter",
  "Philippe",
  "Pierre",
  "Quentin",
  "Rafael",
  "Raj",
  "Ravi",
  "Ricardo",
  "Robert",
  "Samuel",
  "Sebastian",
  "Sergei",
  "Simon",
  "Stefan",
  "Sven",
  "Tao",
  "Theodore",
  "Thomas",
  "Thor",
  "Victor",
  "Viktor",
  "Vincent",
  "Vladimir",
  "Wei",
  "William",
  "Winston",
  "Xavier",
  "Yuki",
  "Zain",
];

// Female first names data
const femaleFirstNames = [
  "Aaliyah",
  "Ada",
  "Aisha",
  "Akiko",
  "Alexandra",
  "Alice",
  "Amara",
  "Ana",
  "Anna",
  "Astrid",
  "Ava",
  "Beatrice",
  "Celine",
  "Chioma",
  "Chloe",
  "Clara",
  "Diana",
  "Elena",
  "Elizabeth",
  "Emma",
  "Esther",
  "Eva",
  "Fatima",
  "Fiona",
  "Flora",
  "Gabriela",
  "Grace",
  "Hana",
  "Hannah",
  "Heidi",
  "Helena",
  "Ida",
  "Imani",
  "Ingrid",
  "Iris",
  "Isabel",
  "Isabella",
  "Jasmine",
  "Ji-eun",
  "Julia",
  "Julie",
  "Juno",
  "Kaia",
  "Kaori",
  "Kira",
  "Kristin",
  "Laura",
  "Layla",
  "Lena",
  "Lucia",
  "Luna",
  "Maria",
  "Marie",
  "Marina",
  "Mary",
  "Maya",
  "Mia",
  "Min-ji",
  "Nadia",
  "Naomi",
  "Natasha",
  "Nina",
  "Nora",
  "Olivia",
  "Paloma",
  "Petra",
  "Phoebe",
  "Priya",
  "Rachel",
  "Rosa",
  "Sakura",
  "Sarah",
  "Sofia",
  "Sonia",
  "Sophie",
  "Stella",
  "Talia",
  "Tanya",
  "Uma",
  "Victoria",
  "Yara",
  "Yasmin",
  "Yoko",
  "Yuki",
  "Zara",
  "Zoe",
];

// Last names data
const lastNames = [
  "Smith",
  "Johnson",
  "Williams",
  "Brown",
  "Jones",
  "Garcia",
  "Miller",
  "Davis",
  "Rodriguez",
  "Martinez",
  "Hernandez",
  "Lopez",
  "Gonzalez",
  "Wilson",
  "Anderson",
  "Thomas",
  "Taylor",
  "Moore",
  "Jackson",
  "Martin",
  "Wang",
  "Li",
  "Zhang",
  "Chen",
  "Liu",
  "Sato",
  "Suzuki",
  "Takahashi",
  "Tanaka",
  "Watanabe",
  "Kim",
  "Lee",
  "Park",
  "Choi",
  "Jung",
  "Patel",
  "Singh",
  "Kumar",
  "Sharma",
  "Reddy",
  "Nair",
  "Rao",
  "Khan",
  "Malik",
  "Qureshi",
  "Syed",
  "Ahmed",
  "Chatterjee",
  "Banerjee",
  "Das",
  "Bose",
  "Ghosh",
  "Nguyen",
  "Tran",
  "Le",
  "Pham",
  "Hoang",
  "Srisai",
  "Saetang",
  "Chaisuwan",
  "Sompong",
  "Suharto",
  "Widodo",
  "Sukarno",
  "Wijaya",
  "Al-Sayed",
  "Ahmad",
  "Mohammed",
  "Al-Abdullah",
  "Hosseini",
  "Ahmadi",
  "Mohammadi",
  "Karimi",
  "Yilmaz",
  "Kaya",
  "Demir",
  "Sahin",
  "Celik",
  "Smith",
  "Jones",
  "Williams",
  "Taylor",
  "Brown",
  "Martin",
  "Bernard",
  "Dubois",
  "Thomas",
  "Robert",
  "Müller",
  "Schmidt",
  "Schneider",
  "Fischer",
  "Weber",
  "Ivanov",
  "Smirnov",
  "Kuznetsov",
  "Popov",
  "Kowalski",
  "Wisniewski",
  "Wojcik",
  "Kowalczyk",
  "Melnyk",
  "Shevchenko",
  "Bondarenko",
  "Rossi",
  "Ferrari",
  "Russo",
  "Esposito",
  "Bianchi",
  "García",
  "Rodríguez",
  "González",
  "Fernández",
  "Papadopoulos",
  "Panagiotopoulos",
  "Dimitriou",
  "Andersson",
  "Johansson",
  "Karlsson",
  "Hansen",
  "Johansen",
  "Olsen",
  "Nielsen",
  "Jensen",
  "Okafor",
  "Adebayo",
  "Okonkwo",
  "Oluwaseun",
  "Mensah",
  "Osei",
  "Owusu",
  "Boateng",
  "Bekele",
  "Demissie",
  "Tadesse",
  "Kamau",
  "Ochieng",
  "Mwangi",
  "Wanjiku",
  "El-Sayed",
  "Hassan",
  "Ibrahim",
  "Alami",
  "Idrissi",
  "Benjelloun",
  "Blackhawk",
  "Running Bear",
  "White Cloud",
  "Martinez",
  "Lopez",
  "Hernandez",
  "Washington",
  "Jefferson",
  "Jackson",
  "Silva",
  "Santos",
  "Oliveira",
  "Souza",
  "Brown",
  "Campbell",
  "Williams",
  "Mundine",
  "Yunupingu",
  "Rangi",
  "Tipene",
  "Henare",
  "Kalani",
  "Tupou",
  "Vaka",
];

// Street names for address generation
const streets = [
  "Main Street",
  "Oak Avenue",
  "Maple Drive",
  "Cedar Lane",
  "Pine Road",
  "Elm Street",
  "Washington Avenue",
  "Park Road",
  "Lake Drive",
  "Hill Street",
];

/**
 * Generates a random date between two dates
 * @param {Date} start - Start date
 * @param {Date} end - End date
 * @returns {Date} Random date between start and end
 */
function randomDate(start: Date, end: Date): Date {
  return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));
}

/**
 * Generates a random string of specified length
 * @param {number} length - Length of string to generate
 * @returns {string} Random string
 */
function randomString(length: number): string {
  return Math.random()
    .toString(36)
    .substring(2, 2 + length);
}

/**
 * Generates a random gender
 * @returns {"male" | "female"} Random gender
 */
function randomGender(): "male" | "female" {
  return Math.random() < 0.5 ? "male" : "female";
}

function generateMobileNumberFormatted() {
  const mobileNumber = `07${Math.floor(Math.random() * 1000000000)}`;
  // format the number
  return mobileNumber.replace(/(\d{2})(\d{4})(\d{4})/, "$1 $2 $3");
}

/**
 * Generates a random person
 * @returns {Person} Randomly generated person
 */
function generateRandomPerson(): Person {
  const gender = randomGender();
  const firstName =
    gender === "male"
      ? maleFirstNames[Math.floor(Math.random() * maleFirstNames.length)]
      : femaleFirstNames[Math.floor(Math.random() * femaleFirstNames.length)];
  const lastName = lastNames[Math.floor(Math.random() * lastNames.length)];
  return {
    firstName,
    lastName,
    dateOfBirth: randomDate(new Date(1950, 0, 1), new Date(2000, 0, 1)),
    gender,
    id: randomString(8),
    address: `${Math.floor(Math.random() * 1000)} ${streets[Math.floor(Math.random() * streets.length)]}`,
    email: `${firstName.toLowerCase()}.${lastName.toLowerCase()}@example.com`,
    mobile: generateMobileNumberFormatted(),
  };
}

function generateRandomPeople(count: number): Person[] {
  const people: Person[] = [];
  for (let i = 0; i < count; i++) {
    people.push(generateRandomPerson());
  }
  return people;
}

export { generateRandomPerson, generateRandomPeople };
